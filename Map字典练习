package com.test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class MapPractise {

	    public static void main(String[] args) {
	        List<Student> list = new ArrayList<>();//使用了泛型，指定<T>为Student
//	        Student s1 = new Student("Bob", 78);
//	        Student s2 = new Student("Alice", 85);
//	        Student s3 = new Student("Brush", 66);
//	        Student s4 = new Student("Newton", 99);
	        list.add(new Student("Bob", 78));
	        list.add(new Student("Alice", 85));
	        list.add(new Student("Brush", 66));
	        list.add(new Student("Newton", 99));
	        list.add(new Student("Jack"));
	        Students holder = new Students(list);
	        System.out.println(holder.getScore("Bob") == 78 ? "测试成功!" : "测试失败!");
	        System.out.println(holder.getScore("Alice") == 85 ? "测试成功!" : "测试失败!");
	        System.out.println(holder.getScore("Tom") == -1 ? "测试成功!" : "测试失败!");
	        System.out.println(holder.getScore("Jack") == -1 ? "测试成功!" : "测试失败!");
	    }
	}

	class Students {
	    List<Student> list;
	    Map<String, Integer> cache;

	    Students(List<Student> list) {
	        this.list = list;
	        cache = new HashMap<>();
	        for(Student s : list) {
	        	cache.put(s.name, s.score);
	        }
	    }

	    /**
	     * 根据name查找score，找到返回score，未找到返回-1
	     */
	    int getScore(String name) {
	        // 先在Map中查找:
	        Integer score = this.cache.get(name);
	        System.out.println(score);
	        return score == null ? -1 : score.intValue();
	    }

	    Integer findInList(String name) {
	        for (Student ss : this.list) {
	            if (ss.name.equals(name)) {
	                return ss.score;
	            }
	        }
	        return null;
	    }
	}
	class Student {
	    String name;
	    Integer score;

	    Student(String name, int score) {
	        this.name = name;
	        this.score = score;
	    }
	    Student(String name){
	    	this.name = name;
	    }
	}
	
